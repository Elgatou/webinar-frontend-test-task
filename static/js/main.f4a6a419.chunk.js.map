{"version":3,"sources":["features/todoItems/TodoItemsContext.tsx","features/todoItems/TodoItems.tsx","features/todoItems/TodoItemsAlert.tsx","features/todoItems/TodoItemForm.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TodoItemsContext","createContext","defaultState","todoItems","error","localStorageKey","TodoItemsContextProvider","children","useImmerReducer","todoItemsReducer","state","dispatch","useEffect","loadState","savedState","localStorage","getItem","type","data","JSON","parse","window","addEventListener","e","setItem","stringify","message","Provider","value","useTodoItems","todoItemsContext","useContext","Error","draft","action","index","unshift","id","Date","now","toString","Math","floor","random","done","todoItem","splice","source","destination","spring","damping","stiffness","duration","useTodoItemListStyles","makeStyles","root","listStyle","padding","TodoItemsList","classes","sortedItems","slice","map","i","sort","a","b","onDragEnd","result","droppableId","provided","ref","innerRef","droppableProps","className","item","motion","li","transition","layout","placeholder","useTodoItemCardStyles","marginTop","marginBottom","doneRoot","textDecoration","color","TodoItemCard","handleDelete","useCallback","handleToggleDone","draggableId","snapshot","Card","draggableProps","dragHandleProps","classnames","CardHeader","IconButton","aria-label","onClick","title","FormControlLabel","control","Checkbox","checked","onChange","name","label","details","CardContent","Typography","variant","component","useTodoItemAlertStyles","TodoItemsAlert","handleClick","Alert","onClose","severity","useInputStyles","TodoItemForm","useForm","handleSubmit","reset","watch","onSubmit","formData","defaultValue","rules","required","render","field","TextField","fullWidth","multiline","Button","disabled","theme","createMuiTheme","palette","primary","main","secondary","Content","Container","maxWidth","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4a6a419.chunk.js","sourcesContent":["import {\r\n  createContext,\r\n  ReactNode,\r\n  useContext,\r\n  useEffect,\r\n  useReducer,\r\n} from \"react\";\r\nimport { useImmerReducer } from \"use-immer\";\r\n\r\nexport interface TodoItem {\r\n  id: string;\r\n  title: string;\r\n  details?: string;\r\n  done: boolean;\r\n  index?: number;\r\n}\r\n\r\ninterface TodoItemsState {\r\n  todoItems: TodoItem[];\r\n  error: boolean;\r\n}\r\n\r\ninterface TodoItemsAction {\r\n  type:\r\n    | \"loadState\"\r\n    | \"add\"\r\n    | \"delete\"\r\n    | \"toggleDone\"\r\n    | \"showError\"\r\n    | \"closeError\"\r\n    | \"dragAndDrop\";\r\n  data: any;\r\n}\r\n\r\nconst TodoItemsContext = createContext<\r\n  (TodoItemsState & { dispatch: (action: TodoItemsAction) => void }) | null\r\n>(null);\r\n\r\nconst defaultState = { todoItems: [], error: false };\r\nconst localStorageKey = \"todoListState\";\r\n\r\nexport const TodoItemsContextProvider = ({\r\n  children,\r\n}: {\r\n  children?: ReactNode;\r\n}) => {\r\n  const [state, dispatch] = useImmerReducer(todoItemsReducer, defaultState);\r\n\r\n  useEffect(() => {\r\n    function loadState() {\r\n      const savedState = localStorage.getItem(localStorageKey);\r\n\r\n      if (savedState) {\r\n        try {\r\n          dispatch({ type: \"loadState\", data: JSON.parse(savedState) });\r\n        } catch {}\r\n      }\r\n    }\r\n\r\n    loadState();\r\n    window.addEventListener(\"storage\", (e) => loadState());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem(localStorageKey, JSON.stringify(state.todoItems));\r\n    } catch (error) {\r\n      dispatch({ type: \"showError\", data: error.message });\r\n    }\r\n  }, [state.todoItems]);\r\n\r\n  return (\r\n    <TodoItemsContext.Provider value={{ ...state, dispatch }}>\r\n      {children}\r\n    </TodoItemsContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTodoItems = () => {\r\n  const todoItemsContext = useContext(TodoItemsContext);\r\n\r\n  if (!todoItemsContext) {\r\n    throw new Error(\r\n      \"useTodoItems hook should only be used inside TodoItemsContextProvider\"\r\n    );\r\n  }\r\n\r\n  return todoItemsContext;\r\n};\r\n\r\nfunction todoItemsReducer(draft: TodoItemsState, action: TodoItemsAction) {\r\n  const index = action.data.index;\r\n\r\n  switch (action.type) {\r\n    case \"loadState\": {\r\n      draft.todoItems = action.data;\r\n      break;\r\n    }\r\n\r\n    case \"add\":\r\n      draft.todoItems.unshift({\r\n        id: generateId(),\r\n        done: false,\r\n        ...action.data.todoItem,\r\n      });\r\n      break;\r\n\r\n    case \"delete\":\r\n      draft.todoItems.splice(index, 1);\r\n      break;\r\n\r\n    case \"toggleDone\":\r\n      draft.todoItems[index].done = !draft.todoItems[index].done;\r\n      break;\r\n\r\n    case \"dragAndDrop\":\r\n      const { source, destination } = action.data;\r\n      if (destination) {\r\n        [draft.todoItems[source.index], draft.todoItems[destination.index]] = [\r\n          draft.todoItems[destination.index],\r\n          draft.todoItems[source.index],\r\n        ];\r\n      }\r\n      break;\r\n\r\n    case \"showError\":\r\n      draft.error = true;\r\n      break;\r\n\r\n    case \"closeError\":\r\n      draft.error = false;\r\n      break;\r\n\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nfunction generateId() {\r\n  return `${Date.now().toString(36)}-${Math.floor(\r\n    Math.random() * 1e16\r\n  ).toString(36)}`;\r\n}\r\n","import { useCallback } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport classnames from \"classnames\";\r\nimport { motion } from \"framer-motion\";\r\nimport {\r\n  DragDropContext,\r\n  Droppable,\r\n  Draggable,\r\n  DropResult,\r\n} from \"react-beautiful-dnd\";\r\nimport { TodoItem, useTodoItems } from \"./TodoItemsContext\";\r\n\r\nconst spring = {\r\n  type: \"spring\",\r\n  damping: 25,\r\n  stiffness: 120,\r\n  duration: 0.25,\r\n};\r\n\r\nconst useTodoItemListStyles = makeStyles({\r\n  root: {\r\n    listStyle: \"none\",\r\n    padding: 0,\r\n  },\r\n});\r\n\r\nexport const TodoItemsList = function () {\r\n  const { todoItems } = useTodoItems();\r\n  const classes = useTodoItemListStyles();\r\n\r\n  const indexedItems = todoItems.slice().map((e, i) => ({ ...e, index: i }));\r\n  const sortedItems = indexedItems.slice().sort((a, b) => {\r\n    if (a.done && !b.done) {\r\n      return 1;\r\n    }\r\n\r\n    if (!a.done && b.done) {\r\n      return -1;\r\n    }\r\n\r\n    return 0;\r\n  });\r\n\r\n  const { dispatch } = useTodoItems();\r\n\r\n  function onDragEnd(result: DropResult) {\r\n    dispatch({ type: \"dragAndDrop\", data: result });\r\n  }\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={onDragEnd}>\r\n      <Droppable droppableId={\"list-1\"}>\r\n        {(provided) => (\r\n          <ul\r\n            ref={provided.innerRef}\r\n            {...provided.droppableProps}\r\n            className={classes.root}\r\n          >\r\n            {sortedItems.map((item) => (\r\n              <motion.li key={item.id} transition={spring} layout={false}>\r\n                <TodoItemCard item={item} />\r\n              </motion.li>\r\n            ))}\r\n            {provided.placeholder}\r\n          </ul>\r\n        )}\r\n      </Droppable>\r\n    </DragDropContext>\r\n  );\r\n};\r\n\r\nconst useTodoItemCardStyles = makeStyles({\r\n  root: {\r\n    marginTop: 24,\r\n    marginBottom: 24,\r\n  },\r\n  doneRoot: {\r\n    textDecoration: \"line-through\",\r\n    color: \"#888888\",\r\n  },\r\n});\r\n\r\nexport const TodoItemCard = function ({ item }: { item: TodoItem }) {\r\n  const classes = useTodoItemCardStyles();\r\n  const { dispatch } = useTodoItems();\r\n\r\n  const handleDelete = useCallback(\r\n    () => dispatch({ type: \"delete\", data: { index: item.index } }),\r\n    [item.index, dispatch]\r\n  );\r\n\r\n  const handleToggleDone = useCallback(\r\n    () =>\r\n      dispatch({\r\n        type: \"toggleDone\",\r\n        data: { index: item.index },\r\n      }),\r\n    [item.index, dispatch]\r\n  );\r\n\r\n  return (\r\n    <Draggable draggableId={item.id} index={item.index!}>\r\n      {(provided, snapshot) => (\r\n        <Card\r\n          ref={provided.innerRef}\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n          className={classnames(classes.root, {\r\n            [classes.doneRoot]: item.done,\r\n          })}\r\n        >\r\n          <CardHeader\r\n            action={\r\n              <IconButton aria-label=\"delete\" onClick={handleDelete}>\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            }\r\n            title={\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={item.done}\r\n                    onChange={handleToggleDone}\r\n                    name={`checked-${item.id}`}\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label={item.title}\r\n              />\r\n            }\r\n          />\r\n          {item.details ? (\r\n            <CardContent>\r\n              <Typography variant=\"body2\" component=\"p\">\r\n                {item.details}\r\n              </Typography>\r\n            </CardContent>\r\n          ) : null}\r\n        </Card>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n","import { useCallback } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { useTodoItems } from \"./TodoItemsContext\";\r\n\r\nconst useTodoItemAlertStyles = makeStyles({\r\n  root: {\r\n    marginTop: 10,\r\n  },\r\n});\r\n\r\nexport const TodoItemsAlert = function () {\r\n  const { error, dispatch } = useTodoItems();\r\n\r\n  const classes = useTodoItemAlertStyles();\r\n  const handleClick = useCallback(\r\n    () => dispatch({ type: \"closeError\", data: \"\" }),\r\n    [dispatch]\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {error ? (\r\n        <Alert onClose={handleClick} severity=\"error\">\r\n          Превышено доступное место в localStorage, новая задача не будет\r\n          сохранена\r\n        </Alert>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n","import { useTodoItems } from \"./TodoItemsContext\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useInputStyles = makeStyles(() => ({\r\n  root: {\r\n    marginBottom: 24,\r\n  },\r\n}));\r\n\r\nexport default function TodoItemForm() {\r\n  const classes = useInputStyles();\r\n  const { dispatch } = useTodoItems();\r\n  const { control, handleSubmit, reset, watch } = useForm();\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit((formData) => {\r\n        dispatch({ type: \"add\", data: { todoItem: formData } });\r\n        reset({ title: \"\", details: \"\" });\r\n      })}\r\n    >\r\n      <Controller\r\n        name=\"title\"\r\n        control={control}\r\n        defaultValue=\"\"\r\n        rules={{ required: true }}\r\n        render={({ field }) => (\r\n          <TextField\r\n            {...field}\r\n            label=\"TODO\"\r\n            fullWidth={true}\r\n            className={classes.root}\r\n          />\r\n        )}\r\n      />\r\n      <Controller\r\n        name=\"details\"\r\n        control={control}\r\n        defaultValue=\"\"\r\n        render={({ field }) => (\r\n          <TextField\r\n            {...field}\r\n            label=\"Details\"\r\n            fullWidth={true}\r\n            multiline={true}\r\n            className={classes.root}\r\n          />\r\n        )}\r\n      />\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        type=\"submit\"\r\n        disabled={!watch(\"title\")}\r\n      >\r\n        Add\r\n      </Button>\r\n    </form>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport { TodoItemsList } from \"./features/todoItems/TodoItems\";\r\nimport { TodoItemsAlert } from \"./features/todoItems/TodoItemsAlert\";\r\nimport { TodoItemsContextProvider } from \"./features/todoItems/TodoItemsContext\";\r\nimport TodoItemForm from \"./features/todoItems/TodoItemForm\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#9012fe\",\r\n    },\r\n    secondary: {\r\n      main: \"#b2aabf\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <TodoItemsContextProvider>\r\n      <ThemeProvider theme={theme}>\r\n        <Content />\r\n      </ThemeProvider>\r\n    </TodoItemsContextProvider>\r\n  );\r\n}\r\n\r\nfunction Content() {\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <header>\r\n        <Typography variant=\"h2\" component=\"h1\">\r\n          Todo List\r\n        </Typography>\r\n      </header>\r\n      <main>\r\n        <TodoItemForm />\r\n        <TodoItemsAlert />\r\n        <TodoItemsList />\r\n      </main>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from \"web-vitals\";\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}